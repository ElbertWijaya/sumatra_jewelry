import { OrdersService } from '../services/orders.service';
import { CreateOrderDto, UpdateOrderStatusDto, RequestUser, OrderStatusEnum, UpdateOrderDto } from '../types/order.dtos';
export declare class OrdersController {
    private orders;
    constructor(orders: OrdersService);
    create(dto: CreateOrderDto, user: RequestUser): Promise<{
        stones: {
            id: number;
            createdAt: Date;
            orderId: number;
            bentuk: string;
            jumlah: number;
            berat: import("@prisma/client/runtime/library").Decimal | null;
        }[];
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        code: string | null;
        customerName: string;
        customerAddress: string | null;
        customerPhone: string | null;
        jenisBarang: string;
        jenisEmas: string;
        warnaEmas: string;
        hargaEmasPerGram: import("@prisma/client/runtime/library").Decimal | null;
        hargaPerkiraan: import("@prisma/client/runtime/library").Decimal | null;
        hargaAkhir: import("@prisma/client/runtime/library").Decimal | null;
        dp: import("@prisma/client/runtime/library").Decimal | null;
        promisedReadyDate: Date | null;
        tanggalSelesai: Date | null;
        tanggalAmbil: Date | null;
        catatan: string | null;
        fotoDesainUrl: string | null;
        referensiGambarUrls: import("@prisma/client/runtime/library").JsonValue | null;
        stoneCount: number;
        totalBerat: import("@prisma/client/runtime/library").Decimal | null;
        status: import(".prisma/client").$Enums.OrderStatus;
        createdById: string | null;
        updatedById: string | null;
        ringSize: string | null;
    }>;
    findAll(status?: OrderStatusEnum): Promise<({
        stones: {
            id: number;
            createdAt: Date;
            orderId: number;
            bentuk: string;
            jumlah: number;
            berat: import("@prisma/client/runtime/library").Decimal | null;
        }[];
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        code: string | null;
        customerName: string;
        customerAddress: string | null;
        customerPhone: string | null;
        jenisBarang: string;
        jenisEmas: string;
        warnaEmas: string;
        hargaEmasPerGram: import("@prisma/client/runtime/library").Decimal | null;
        hargaPerkiraan: import("@prisma/client/runtime/library").Decimal | null;
        hargaAkhir: import("@prisma/client/runtime/library").Decimal | null;
        dp: import("@prisma/client/runtime/library").Decimal | null;
        promisedReadyDate: Date | null;
        tanggalSelesai: Date | null;
        tanggalAmbil: Date | null;
        catatan: string | null;
        fotoDesainUrl: string | null;
        referensiGambarUrls: import("@prisma/client/runtime/library").JsonValue | null;
        stoneCount: number;
        totalBerat: import("@prisma/client/runtime/library").Decimal | null;
        status: import(".prisma/client").$Enums.OrderStatus;
        createdById: string | null;
        updatedById: string | null;
        ringSize: string | null;
    })[]>;
    findOne(id: number): Promise<{
        stones: {
            id: number;
            createdAt: Date;
            orderId: number;
            bentuk: string;
            jumlah: number;
            berat: import("@prisma/client/runtime/library").Decimal | null;
        }[];
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        code: string | null;
        customerName: string;
        customerAddress: string | null;
        customerPhone: string | null;
        jenisBarang: string;
        jenisEmas: string;
        warnaEmas: string;
        hargaEmasPerGram: import("@prisma/client/runtime/library").Decimal | null;
        hargaPerkiraan: import("@prisma/client/runtime/library").Decimal | null;
        hargaAkhir: import("@prisma/client/runtime/library").Decimal | null;
        dp: import("@prisma/client/runtime/library").Decimal | null;
        promisedReadyDate: Date | null;
        tanggalSelesai: Date | null;
        tanggalAmbil: Date | null;
        catatan: string | null;
        fotoDesainUrl: string | null;
        referensiGambarUrls: import("@prisma/client/runtime/library").JsonValue | null;
        stoneCount: number;
        totalBerat: import("@prisma/client/runtime/library").Decimal | null;
        status: import(".prisma/client").$Enums.OrderStatus;
        createdById: string | null;
        updatedById: string | null;
        ringSize: string | null;
    }>;
    history(id: number): Promise<{
        id: number;
        changedAt: Date;
        by: {
            id: any;
            fullName: any;
            jobRole: any;
        } | null;
        action: any;
        statusFrom: any;
        statusTo: any;
        summary: string | null;
        diff: import("@prisma/client/runtime/library").JsonValue;
    }[]>;
    updateStatus(id: number, dto: UpdateOrderStatusDto, user: RequestUser): Promise<{
        id: number;
        createdAt: Date;
        updatedAt: Date;
        code: string | null;
        customerName: string;
        customerAddress: string | null;
        customerPhone: string | null;
        jenisBarang: string;
        jenisEmas: string;
        warnaEmas: string;
        hargaEmasPerGram: import("@prisma/client/runtime/library").Decimal | null;
        hargaPerkiraan: import("@prisma/client/runtime/library").Decimal | null;
        hargaAkhir: import("@prisma/client/runtime/library").Decimal | null;
        dp: import("@prisma/client/runtime/library").Decimal | null;
        promisedReadyDate: Date | null;
        tanggalSelesai: Date | null;
        tanggalAmbil: Date | null;
        catatan: string | null;
        fotoDesainUrl: string | null;
        referensiGambarUrls: import("@prisma/client/runtime/library").JsonValue | null;
        stoneCount: number;
        totalBerat: import("@prisma/client/runtime/library").Decimal | null;
        status: import(".prisma/client").$Enums.OrderStatus;
        createdById: string | null;
        updatedById: string | null;
        ringSize: string | null;
    }>;
    update(id: number, dto: UpdateOrderDto, user: RequestUser): Promise<{
        stones: {
            id: number;
            createdAt: Date;
            orderId: number;
            bentuk: string;
            jumlah: number;
            berat: import("@prisma/client/runtime/library").Decimal | null;
        }[];
    } & {
        id: number;
        createdAt: Date;
        updatedAt: Date;
        code: string | null;
        customerName: string;
        customerAddress: string | null;
        customerPhone: string | null;
        jenisBarang: string;
        jenisEmas: string;
        warnaEmas: string;
        hargaEmasPerGram: import("@prisma/client/runtime/library").Decimal | null;
        hargaPerkiraan: import("@prisma/client/runtime/library").Decimal | null;
        hargaAkhir: import("@prisma/client/runtime/library").Decimal | null;
        dp: import("@prisma/client/runtime/library").Decimal | null;
        promisedReadyDate: Date | null;
        tanggalSelesai: Date | null;
        tanggalAmbil: Date | null;
        catatan: string | null;
        fotoDesainUrl: string | null;
        referensiGambarUrls: import("@prisma/client/runtime/library").JsonValue | null;
        stoneCount: number;
        totalBerat: import("@prisma/client/runtime/library").Decimal | null;
        status: import(".prisma/client").$Enums.OrderStatus;
        createdById: string | null;
        updatedById: string | null;
        ringSize: string | null;
    }>;
    remove(id: number, user: RequestUser): Promise<{
        success: boolean;
    }>;
}
